# Generated by Django 5.2.1 on 2025-06-19 20:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("patient_name", models.CharField(max_length=255)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("nonbinary", "Nonbinary"),
                            ("unknown", "Unknown"),
                            ("other", "Other / Prefer to self-describe"),
                        ],
                        default="unknown",
                        help_text="Patient gender (used in phrasing and context).",
                        max_length=16,
                    ),
                ),
                ("mrn", models.CharField(max_length=64)),
                ("dob", models.DateField(blank=True, null=True)),
                ("accession", models.CharField(blank=True, max_length=64)),
                ("exam_date", models.DateField(blank=True, null=True)),
                (
                    "exam_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("carotid", "Carotid"),
                            ("renal", "Renal"),
                            ("ivc", "IVC"),
                            ("aorta", "Aorta"),
                            ("mesenteric", "Mesenteric"),
                            ("le_arterial", "LE Arterial"),
                            ("le_venous", "LE Venous"),
                        ],
                        help_text="What type of study this is (e.g. carotid, renal).",
                        max_length=64,
                    ),
                ),
                (
                    "exam_scope",
                    models.CharField(
                        blank=True,
                        help_text="Scope of the exam (e.g. bilateral, right, left).",
                        max_length=32,
                    ),
                ),
                (
                    "exam_extent",
                    models.CharField(
                        blank=True,
                        help_text="Extent of the exam (e.g. complete, limited).",
                        max_length=32,
                    ),
                ),
                (
                    "cpt_code",
                    models.CharField(
                        blank=True,
                        help_text="CPT code derived from exam_type + scope/extent.",
                        max_length=32,
                    ),
                ),
                (
                    "technique",
                    models.TextField(
                        blank=True,
                        help_text="Free-text description of imaging technique used.",
                    ),
                ),
                (
                    "operative_history",
                    models.TextField(
                        blank=True,
                        help_text="Optional notes on surgical or procedural history.",
                    ),
                ),
                (
                    "indication_code",
                    models.CharField(
                        blank=True,
                        help_text="ICD-10 code for indication (e.g., I73.9).",
                        max_length=16,
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        help_text="Technologist who performed the study. Can later become FK to user.",
                        max_length=128,
                    ),
                ),
                (
                    "reading_physician",
                    models.CharField(
                        blank=True,
                        help_text="MD who reviews and finalizes the report.",
                        max_length=128,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("draft", "Draft"),
                            ("tech_signed", "Signed by Technologist"),
                            ("finalized", "Finalized by Physician"),
                        ],
                        default="draft",
                        help_text="Workflow status: draft → tech_signed → finalized.",
                        max_length=32,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("manual", "Manual Entry"),
                            ("epic", "HL7/EPIC"),
                            ("dicom", "DICOM SR"),
                            ("agent", "AI Agent"),
                            ("import", "Batch Import"),
                        ],
                        default="manual",
                        help_text="Origin of exam data (manual, EPIC, DICOM, etc.)",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("signed_by_tech", models.BooleanField(default=False)),
                ("signed_by_physician", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Exam",
                "verbose_name_plural": "Exams",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Segment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for the segment, e.g. 'mid_ica_right'. Used in template mapping.",
                        max_length=100,
                    ),
                ),
                (
                    "artery",
                    models.CharField(
                        choices=[
                            ("ica", "Internal Carotid Artery"),
                            ("cca", "Common Carotid Artery"),
                            ("eca", "External Carotid Artery"),
                            ("vertebral", "Vertebral Artery"),
                            ("subclavian", "Subclavian Artery"),
                            ("aorta", "Aorta"),
                            ("ivc", "IVC"),
                        ],
                        help_text="Clinical vessel type (ICA, CCA, etc.). Used in calculations and grouping.",
                        max_length=32,
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[
                            ("right", "Right"),
                            ("left", "Left"),
                            ("n/a", "Not Applicable"),
                        ],
                        default="n/a",
                        help_text="Side of the body this segment belongs to (right/left/n/a).",
                        max_length=8,
                    ),
                ),
                (
                    "exam",
                    models.ForeignKey(
                        help_text="Parent exam this segment belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="segments",
                        to="reports.exam",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "psv",
                    models.FloatField(
                        blank=True,
                        help_text="Peak Systolic Velocity (cm/s). Required for stenosis calculation.",
                        null=True,
                    ),
                ),
                (
                    "edv",
                    models.FloatField(
                        blank=True,
                        help_text="End Diastolic Velocity (cm/s). Used in high-grade stenosis calculation.",
                        null=True,
                    ),
                ),
                (
                    "ica_cca_ratio",
                    models.FloatField(
                        blank=True,
                        help_text="ICA/CCA PSV Ratio. Used for determining 60–79% stenosis zone.",
                        null=True,
                    ),
                ),
                (
                    "plaque_type",
                    models.CharField(
                        blank=True,
                        help_text="Morphological classification of plaque (e.g. calcified, soft, heterogeneous).",
                        max_length=64,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        blank=True,
                        help_text="Flow direction (e.g. antegrade, retrograde). Important for vertebral/subclavian analysis.",
                        max_length=32,
                    ),
                ),
                (
                    "waveform",
                    models.CharField(
                        blank=True,
                        help_text="Waveform pattern (e.g. triphasic, monophasic). Used in qualitative flow assessment.",
                        max_length=64,
                    ),
                ),
                (
                    "stenosis_category",
                    models.CharField(
                        blank=True,
                        help_text="Optional derived field showing interpreted stenosis severity (e.g. '60–79%').",
                        max_length=64,
                    ),
                ),
                (
                    "additional_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Custom or extra measurements not modeled explicitly.",
                    ),
                ),
                (
                    "segment",
                    models.ForeignKey(
                        help_text="The anatomical segment this measurement is tied to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="reports.segment",
                    ),
                ),
            ],
        ),
    ]
